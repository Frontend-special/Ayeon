/*
배열 나누기
함수 division 특정한 배열을 내가 원하는 원소의 갯수를 길이로 가진 배열들로 분해하려고한다
이후, 해당 배열들을 요소로 갖는 배열을 반환한다
ex) 길이기 80인 배열은 길이가 5로 분해한다면 16개의 배열을 요소로 갖는 배열을 반환한다

1. 요구사항 확인하기
    함수 division에 사용자가 원하는 원소의 갯수의 길이를 입력했을 때, 배열을 그 원소의 길이만큼 분해한 후 배열로 반환하는 것

2. 요구사항 바탕으로 인풋 생각하기
    (1) 함수 division에 들어갈 특정한 배열 정하기
    (2) 함수 division에 특정한 배열 및 원소의 갯수의 길이를 입력하기
    (3) 입력받은 갯수의 길이로 배열을 분해하기
    (4) 분해한 배열을 받아서 그걸 요소로 갖는 배열을 반환하기

3. 인풋 바탕으로 단계별 한글로 함수 설계하기
    (1) division에 입력할 배열 ㅇ
    (2) 배열을 길이로 잘라 분해할 수 있는 함수
    (3) 자른 배열을 요소로 가지면서 반환할 수 있는 함수

4. 단계별 구글링 키워드 생각하기
    (1) 배열을 자를 수 있는 함수 -> 기능별로 검색 | 배열을 내가 원하는 수만큼 자르는 법 => slice()
    (2) 배열을 자르고 요소로 가질 수 있는 함수 => slice() / splice()
    (3) 배열을 반환하는 방법 => return...

*/

// 어떡해... 답이 기억나... 어떡해...? ㅠㅠ ㅠㅠㅠ

function division(arr2, divNumber) {
    const arr3 = arr2;
    const result = [];

    for (let i = 0; i < arr3.length; i += divNumber) {
        result.push(arr3.slice(i, i + divNumber));
    }
    return result;
}

let arr = [1, 2, 3, 4, 5];
division(arr, 2); // [ [1,2], [3,4], [5] ]
